<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:util="http://www.springframework.org/schema/util" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/mvc
       http://www.springframework.org/schema/mvc/spring-mvc.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/util
       http://www.springframework.org/schema/util/spring-util.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

    <context:component-scan base-package="com.sanzhar.twitter" />
    <mvc:annotation-driven />
    <mvc:resources mapping="/resources/**/" location="/resources/" />

    <!-- View Resolver -->
    <bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/pages/" />
        <property name="suffix" value=".jsp" />
    </bean>

    <!-- Database Connection Pool -->
    <bean id="dataSourse" class="org.apache.commons.dbcp2.BasicDataSource">
        <property name="driverClassName" value="com.mysql.jdbc.Driver" />
        <property name="url" value="jdbc:mysql://localhost:3306/twitter_db" />
        <property name="username" value="root" />
        <property name="password" value="" />
    </bean>

    <!-- Hibernate Session Factory -->
    <bean id="hibernateSessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSourse" />
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQL5Dialect</prop>
                <prop key="hibernate.show_sql">true</prop>
                <prop key="hibernate.hbm2ddl.auto">validate</prop>
            </props>
        </property>

        <property name="annotatedClasses">
            <list>
                <value>com.sanzhar.twitter.model.User</value>
                <value>com.sanzhar.twitter.model.Blog</value>
            </list>
        </property>
    </bean>

    <!-- Transactions -->
    <tx:annotation-driven transaction-manager="transactionManager" />

    <bean id="transactionManager" class="org.springframework.orm.hibernate5.HibernateTransactionManager">
        <property name="sessionFactory" ref="hibernateSessionFactory" />
    </bean>
    
    <!-- HandlerInterceptor -->
    <mvc:interceptors>
        <mvc:interceptor>
            <mvc:mapping path="/**"/>
            <mvc:exclude-mapping path="/user/login" />
            <mvc:exclude-mapping path="/*" />
            <bean class="com.sanzhar.twitter.util.HandlerInterceptor" />
        </mvc:interceptor>
    </mvc:interceptors>

    <!-- Date formatter -->
    <bean id="dateFormatter" class="java.text.SimpleDateFormat">
        <constructor-arg index="0" value="d MMMM yyyy 'at' H:mm" />
        <constructor-arg index="1">
            <util:constant static-field="java.util.Locale.ENGLISH" />
        </constructor-arg>
    </bean>






    <!-- Jackson Converter -->   <!--
    <mvc:annotation-driven>
        <mvc:message-converters>
            <bean id="jacksonConverter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
                <property name="supportedMediaTypes">
                    <util:constant static-field="org.springframework.http.MediaType.APPLICATION_JSON" />
                </property>
                <property name="objectMapper" ref="objectMapper" />
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>    -->

    <!-- Object Mapper -->    <!--
    <bean id="objectMapper" class="com.fasterxml.jackson.databind.ObjectMapper" />  -->

</beans>